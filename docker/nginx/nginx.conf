user nginx;

# 1 worker process per CPU core.
# Check max: $ grep processor /proc/cpuinfo | wc -l
worker_processes 2;
# worker_processes auto;

error_log /dev/stderr warn;
pid /var/run/nginx.pid;

events {
    # Tells worker processes how many people can be served simultaneously.
    # worker_process (2) * worker_connections (2048) = 4096
    # Check max: $ ulimit -n
    worker_connections 2048;

    # Connection processing method. The epoll is efficient method used on Linux 2.6+
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format json_combined escape=json
          '{'
            '"time_local":"$time_iso8601",'
            '"client_ip":"$http_x_forwarded_for",'
            '"remote_addr":"$remote_addr",'
            '"remote_user":"$remote_user",'
            '"request":"$request",'
            '"status":"$status",'
            '"body_bytes_sent":"$body_bytes_sent",'
            '"request_time":"$request_time",'
            '"http_referrer":"$http_referer",'
            '"http_user_agent":"$http_user_agent",'
            '"request_id":"$request_id"'
          '}';

    access_log /dev/stdout json_combined;
    # error_log off;

    # Used to reduce 502 and 504 HTTP errors.
    fastcgi_buffers 8 16k;
    fastcgi_buffer_size 32k;
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;

    # The sendfile allows transfer data from a file descriptor to another directly in kernel.
    # Combination of sendfile and tcp_nopush ensures that the packets are full before being sent to the client.
    # This reduces network overhead and speeds the way files are sent.
    # The tcp_nodelay forces the socket to send the data.
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # The client connection can stay open on the server up to given seconds.
    keepalive_timeout 65;

    # Hides Nginx server version in headers.
    server_tokens off;

    # Disable content-type sniffing on some browsers.
    add_header X-Content-Type-Options nosniff;

    # Enables the Cross-site scripting (XSS) filter built into most recent web browsers.
    # If user disables it on the browser level, this role re-enables it automatically on serve level.
    add_header X-XSS-Protection '1; mode=block';

    # Prevent the browser from rendering the page inside a frame/iframe to avoid clickjacking.
    add_header X-Frame-Options DENY;

    # Enable HSTS to prevent SSL stripping.
    add_header Strict-Transport-Security 'max-age=31536000; includeSubdomains; preload';

    # Prevent browser sending the referrer header when navigating from HTTPS to HTTP.
    add_header 'Referrer-Policy' 'no-referrer-when-downgrade';

    # Sets the maximum size of the types hash tables.
    types_hash_max_size 2048;

    client_max_body_size 10m;

    # include /etc/nginx/conf.d/*.conf;

    include snippets/gzip-params.conf;

    server {
        listen [::]:80 ipv6only=on;
        listen 80;

        # redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
        # return 301 https://$host$request_uri;

        include server.conf;
    }

    server {
        listen [::]:443 ssl http2 ipv6only=on;
        listen 443 ssl http2;

        include server.conf;
    }
}
