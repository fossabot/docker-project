version: "3.8"

x-logging:
  &default-logging
  logging:
    driver: json-file

x-php:
  &default-php
  restart: "no"
  volumes:
    - ./bin:/app/bin:cached
    - ./config:/app/config:cached
    - ./src:/app/src:cached
    - ./docker:/app/docker:cached
  env_file:
    - .env
  environment:
    - APP_ENV=${APP_ENV:?You need to set the APP_ENV environment variable}
    - APP_DEBUG=${APP_DEBUG:-0}
    - APP_SECRET=${APP_SECRET:?You need to set the APP_SECRET environment variable}
    - APP_RELEASE=${APP_RELEASE:?You need to set the APP_RELEASE environment variable}
  depends_on:
    - postgres
    - memcached
    - redis
    - rabbitmq

volumes:
  rabbitmq: {}
  postgres: {}

# https://github.com/docker/compose/issues/4675
services:
  nginx:
    image: soprun/sandbox-nginx:latest
    hostname: nginx
    container_name: nginx
    depends_on:
      - php
    ports:
      - 80:80
      - 443:443

  php:
    image: soprun/sandbox-php:latest
    hostname: php
    container_name: php
    privileged: true
    <<: *default-php
    <<: *default-logging
    ports:
      - 9000

  php_cli:
    image: soprun/sandbox-php-cli:latest
    hostname: php_cli
    container_name: php_cli
    tty: true
    <<: *default-php

  postgres:
    image: postgres:latest
    hostname: "${POSTGRES_HOST}"
    container_name: postgres
    restart: on-failure
    <<: *default-logging
    ports:
      - "${POSTGRES_PORT_EXTERNAL}:${POSTGRES_PORT}"
    volumes:
      - ./docker/postgres/dump.sql:/docker-entrypoint-initdb.d/dump.sql
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB
      - POSTGRES_USERNAME
      - POSTGRES_PASSWORD
      - POSTGRES_HOST_AUTH_METHOD

  rabbitmq:
    image: rabbitmq:3.8.5-alpine
    hostname: "${RABBITMQ_HOST}"
    container_name: rabbitmq
    restart: on-failure
    <<: *default-logging
    ports:
      - "${RABBITMQ_PORT_EXTERNAL}:${RABBITMQ_PORT}"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}

  rabbitmq-management:
    image: rabbitmq:3.8.5-management-alpine
    container_name: rabbitmq-management
    restart: always
    ports:
      - 15672:15672

  memcached:
    image: memcached:latest
    container_name: memcached
    hostname: ${MEMCACHED_HOST}
    restart: always
    ports:
      - "${MEMCACHED_PORT_EXTERNAL}:${MEMCACHED_PORT}"

  redis:
    image: redis:latest
    container_name: redis
    hostname: ${REDIS_HOST}
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "${REDIS_PORT_EXTERNAL}:${REDIS_PORT}"
