version: "3.8"

x-logging:
  &default-logging
  logging:
    driver: ${LOGGING_DRIVER:-json-file}
    options:
      max-size: ${LOGGING_MAX_SIZE:-2m}
      max-file: ${LOGGING_MAX_FILE:-10}

x-php:
  &default-php
  restart: "no"
  volumes:
    - ./bin:/app/bin:ro,cached
    - ./config:/app/config:rw,cached
    - ./public:/app/public:ro,cached
    - ./src:/app/src:rw,cached
    - ./vendor:/app/vendor:rw,cached
    - ./docker:/app/docker:ro,cached
  env_file:
    - .env
  environment:
    - APP_ENV=${APP_ENV:?You need to set the APP_ENV environment variable}
    - APP_DEBUG=${APP_DEBUG:-0}
    - APP_SECRET=${APP_SECRET:?You need to set the APP_SECRET environment variable}
    - APP_RELEASE=${APP_RELEASE:?You need to set the APP_RELEASE environment variable}
  depends_on:
    - postgres
    - memcached
    - redis
    - rabbitmq

volumes:
  rabbitmq: {}
  postgres: {}

networks:
  default:
    external:
      name: ${NETWORK_NAME}

# https://github.com/docker/compose/issues/4675
services:
  nginx:
    image: soprun/sandbox-nginx:latest
    hostname: nginx
    container_name: nginx
    <<: *default-logging
    depends_on:
      - php
    ports:
      - "${NETWORK_IP}:${NETWORK_HTTP}:80"
      - "${NETWORK_IP}:${NETWORK_HTTPS}:443"

  php:
    image: soprun/sandbox-php:latest
    hostname: php
    container_name: php
    privileged: true
    <<: *default-php
    <<: *default-logging
    ports:
      - 9000

  #  php-cli:
  #    image: soprun/sandbox-php-cli:latest
  #    hostname: php-cli
  #    container_name: php-cli
  #    tty: true
  #    <<: *default-php

  postgres:
    image: postgres:latest
    hostname: "${POSTGRES_HOST}"
    container_name: postgres
    restart: on-failure
    <<: *default-logging
    ports:
      - "${POSTGRES_PORT_EXTERNAL}:${POSTGRES_PORT}"
    volumes:
      - ./docker/postgres/dump.sql:/docker-entrypoint-initdb.d/dump.sql
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB
      - POSTGRES_USERNAME
      - POSTGRES_PASSWORD
      - POSTGRES_HOST_AUTH_METHOD

  rabbitmq:
    image: rabbitmq:3.8.5-alpine
    hostname: "${RABBITMQ_HOST}"
    container_name: rabbitmq
    restart: on-failure
    <<: *default-logging
    ports:
      - "${RABBITMQ_PORT_EXTERNAL}:${RABBITMQ_PORT}"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}

  rabbitmq-management:
    image: rabbitmq:3.8.5-management-alpine
    hostname: "${RABBITMQ_MANAGEMENT_HOST}"
    container_name: rabbitmq-management
    restart: always
    ports:
      - "${RABBITMQ_MANAGEMENT_PORT_EXTERNAL}:${RABBITMQ_MANAGEMENT_PORT}"

  memcached:
    image: memcached:latest
    hostname: "${MEMCACHED_HOST}"
    container_name: memcached
    restart: always
    ports:
      - "${MEMCACHED_PORT_EXTERNAL}:${MEMCACHED_PORT}"

  redis:
    image: redis:latest
    hostname: "${REDIS_HOST}"
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "${REDIS_PORT_EXTERNAL}:${REDIS_PORT}"
