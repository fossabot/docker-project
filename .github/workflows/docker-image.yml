name: Docker Image CI

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NGINX_TAG: soprun/sandbox-nginx
  IMAGE_NGINX_FILE: ./docker/php/Dockerfile

  IMAGE_PHP_TAG: soprun/sandbox-php
  IMAGE_PHP_FILE: ./docker/php/Dockerfile

  IMAGE_PHP_CLI_TAG: soprun/sandbox-php-cli
  IMAGE_PHP_CLI_FILE: ./docker/php-cli/Dockerfile

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [6, 8, 10]

    steps:
      - uses: actions/checkout@v2

      - name: Docker Lint - $IMAGE_TAG
        uses: luke142367/Docker-Lint-Action@v1.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGE_TAG: ${{ env.IMAGE_NGINX_TAG }}
          IMAGE_FILE: ${{ env.IMAGE_NGINX_FILE }}
        with:
          target: $IMAGE_TAG

      - name: Docker Lint - $IMAGE_TAG
        uses: luke142367/Docker-Lint-Action@v1.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGE_TAG: ${{ env.IMAGE_PHP_TAG }}
          IMAGE_FILE: ${{ env.IMAGE_PHP_FILE }}
        with:
          target: $IMAGE_TAG

      - name: Docker Lint - $IMAGE_TAG
        uses: luke142367/Docker-Lint-Action@v1.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGE_TAG: ${{ env.IMAGE_PHP_CLI_TAG }}
          IMAGE_FILE: ${{ env.IMAGE_PHP_CLI_FILE }}
        with:
          target: $IMAGE_FILE

      - name: Build the Docker image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo $IMAGE_NAME
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          # docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          # docker push $IMAGE_ID:$VERSION

  push:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          docker build . --file Dockerfile --tag $IMAGE_NAME