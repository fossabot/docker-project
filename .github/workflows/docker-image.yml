name: Docker Image CI

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NGINX_NAME: soprun/sandbox-nginx
  IMAGE_NGINX_FILE: ./docker/php/Dockerfile

  IMAGE_PHP_NAME: soprun/sandbox-php
  IMAGE_PHP_FILE: ./docker/php/Dockerfile

  IMAGE_PHP_CLI_NAME: soprun/sandbox-php-cli
  IMAGE_PHP_CLI_FILE: ./docker/php-cli/Dockerfile

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Build the Docker image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo VERSION=$VERSION
          echo GITHUB_REF=$GITHUB_REF
          echo GITHUB_HEAD_REF=$GITHUB_HEAD_REF
          echo GITHUB_BASE_REF=$GITHUB_BASE_REF

          docker build \
            --build-arg APP_ENV=dev \
            --build-arg APP_DEBUG=1 \
            --file ${{ env.IMAGE_NGINX_FILE }} \
            --tag "${{ env.IMAGE_NGINX_NAME }}:$VERSION" \
            .

          docker build \
            --build-arg APP_ENV=dev \
            --build-arg APP_DEBUG=1 \
            --file ${{ env.IMAGE_PHP_FILE }} \
            --tag "${{ env.IMAGE_PHP_NAME }}:$VERSION" \
            .

          docker build \
            --build-arg APP_ENV=dev \
            --build-arg APP_DEBUG=1 \
            --file ${{ env.IMAGE_PHP_CLI_FILE }} \
            --tag "${{ env.IMAGE_PHP_CLI_NAME }}:$VERSION" \
            .

          docker push ${{ env.IMAGE_NGINX_NAME }}
          docker push ${{ env.IMAGE_PHP_NAME }}
          docker push ${{ env.IMAGE_PHP_CLI_NAME }}
